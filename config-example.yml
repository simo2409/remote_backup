---
# remote_backup config file

# Directory to backup
dir_to_backup: './'

# Name of the backup. if empty it will be generated automatically using date/time. backup201105121627.tar.gz means 2011-05-12 16:27
fixed_name: ''

# If it's true the directory where put backup is on a remote FTP (it will use destination_path on FTP)
remote_backup: false
# This can be ftp or sftp
remote_type: ftp
remote_host: ''
remote_username: ''
remote_password: ''
remote_port: 21

# Directory where put backup
destination_path: './'

# If it's true remote_backup will delete older backups in 'destination_path' except what you want to preserve using 'preserve_list_of_old_backup' value (it does work just if you didn't set a 'fixed_name' value for your backups)
clear_old_backups: false

# In this array you can specify (in days) which old backups have to be preserved from the delete. From example 1 means "save from the delete the backup of yesterday" (every value is referred to the moment the script is executed). It works only if 'clear_old_backups' value is true and if you didn't set a 'fixed_name' value for your backups.
preserve_list_of_old_backup: [1, 2, 3, 4, 5, 6, 7] # yesterday, 2 days ago, 3 days ago and so on

# This is a command to execute before the backup happens
pre_backup_command: ''

# This is a command to execute after the backup happens
post_backup_command: ''

# If it's true remote_backup will not produce output
silent: false

# Directory to use temporary to store compressed backup
temporary_path: '.'
# Path to tar executable
tar_bin: /usr/bin/tar